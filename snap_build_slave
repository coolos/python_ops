import os, sys
import subprocess

dbuser = "root"
dbpass = "xxx"
repluser = "repl"
replpass = "xxxx"
MYSQL = "/usr/local/bin/mysql" + " -u" + dbuser + " -p" + dbpass

silicon_master = ['10.16.26.55:3307', '10.16.28.148:3308']
ali_master = ['10.11.226.230:3307', '10.23.26.239:3308']


def execute_cmd(cmd):
    rts = []
    p = subprocess.Popen(cmd,
                         shell=True,
                         stdin=subprocess.PIPE,
                         stdout=subprocess.PIPE,
                         stderr=subprocess.PIPE)
    p.wait()
    stdout, stderr = p.communicate()
    if p.returncode != 0:
        return p.returncode, stderr
    # for line in stdout:
    #   rts.append(line.strip('\n')
    # print (stdout)
    return p.returncode, stdout


def main():
    set_cmd = ""
    change_master_stm = []
    for i in range(0, len(silicon_master)):
        set_cmd = MYSQL+" -h"+silicon_master[i].split(":")[0]+" -P"+silicon_master[i].split(":")[1]+" -e 'set global read_only=1;'"
        print(set_cmd)
        # execute_cmd(set_cmd)
        set_cmd = MYSQL+" -h"+silicon_master[i].split(":")[0]+" -P"+silicon_master[i].split(":")[1]+" -e 'show variables like \"read_only\";'"
        print(set_cmd)
        # execute_cmd(set_cmd)

        set_cmd = MYSQL+" -h"+ali_master[i].split(":")[0]+" -P"+ali_master[i].split(":")[1]+" -e 'set global read_only=1;'"
        print(set_cmd)
        # execute_cmd(set_cmd)
        set_cmd = MYSQL+" -h"+ali_master[i].split(":")[0]+" -P"+ali_master[i].split(":")[1]+" -e 'show variables like \"read_only\";'"
        print(set_cmd)
        # execute_cmd(set_cmd)

        # get ali master info, compose change master statement for silicon DB
        set_cmd = MYSQL + " -h" + ali_master[i].split(":")[0] + " -P" + ali_master[i].split(":")[
            1] + " -e 'show master status;'"
        print(set_cmd)
        e_rtncode, p_rtnout = execute_cmd(set_cmd)
        # 'File\tPosition\tBinlog_Do_DB\tBinlog_Ignore_DB\tExecuted_Gtid_Set\nmysql-bin.000005\t5413665\t\t\t\n'
        # print ("change master to master_host='{}',master_port={},master_user='{}',master_password='{}',master_log_file='{}',master_log_pos={};".format(ali_master[i].split(":")[0],ali_master[i].split(":")[1],repluser,replpass,p_rtnout.split("\n")[1].split("\t")[0],p_rtnout.split("\n")[1].split("\t")[1]))
        change_master_stm.append(
            "change master to master_host='{}',master_port={},master_user='{}',master_password='{}',master_log_file='{}',master_log_pos={};".format(
                ali_master[i].split(":")[0], ali_master[i].split(":")[1], repluser, replpass,
                p_rtnout.split("\n")[1].split("\t")[0], p_rtnout.split("\n")[1].split("\t")[1]))
        print(change_master_stm)

        # for silicon DB, change master
        set_cmd = MYSQL + " -h" + silicon_master[i].split(":")[0] + " -P" + silicon_master[i].split(":")[1] + " -e \"" + \
                  change_master_stm[i] + "\""
        print(set_cmd)
        #execute_cmd(set_cmd)


        set_cmd = MYSQL+" -h"+silicon_master[i].split(":")[0]+" -P"+silicon_master[i].split(":")[1]+" -e 'set global read_only=1;'"
        print(set_cmd)
        # execute_cmd(set_cmd)
        set_cmd = MYSQL+" -h"+silicon_master[i].split(":")[0]+" -P"+silicon_master[i].split(":")[1]+" -e 'show variables like \"read_only\";'"
        print(set_cmd)
        # execute_cmd(set_cmd)

        set_cmd = MYSQL+" -h"+ali_master[i].split(":")[0]+" -P"+ali_master[i].split(":")[1]+" -e 'set global read_only=0;'"
        print(set_cmd)
        # execute_cmd(set_cmd)
        set_cmd = MYSQL+" -h"+ali_master[i].split(":")[0]+" -P"+ali_master[i].split(":")[1]+" -e 'show variables like \"read_only\";'"
        print(set_cmd)
        # execute_cmd(set_cmd)

if __name__ == '__main__':
    main()
